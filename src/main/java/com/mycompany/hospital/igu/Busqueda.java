package com.mycompany.hospital.igu;

import com.mycompany.hospital.logica.ControladoraLogica;
import com.mycompany.hospital.logica.Paciente;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class Busqueda extends javax.swing.JFrame {

    ControladoraLogica logica = null;
    Paciente pac = new Paciente();
    
    
    
    public Busqueda(int id_buscar) {
        logica = new ControladoraLogica();
        initComponents();
        
        
        cargarBusqueda(id_buscar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnModificar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPacientes = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Footlight MT Light", 0, 48)); // NOI18N
        jLabel1.setText("Dra.Cuevas");

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/verificar.png"))); // NOI18N
        btnSalir.setText("Cerrar Ventana");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        tablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tablaPacientes);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nutri.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(39, Short.MAX_VALUE)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)))
                .addGap(41, 41, 41))
        );

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Resultados de la  Busqueda");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(562, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(529, 529, 529))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed

        Consultas2 consul = new Consultas2();
        consul.setVisible(true);
        consul.setLocationRelativeTo(null);
        
        this.dispose();   
        
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        //Variable de confirmacion de eliminacion
        int codigo = 0;
        //Verificar si la tabla no esta vacia
        if(tablaPacientes.getRowCount() > 0){
            //Verificamos que se selecciono un fila (registro a eliminar)
            if(tablaPacientes.getSelectedRow()!=-1){

                //Mensaje de confirmacion de la eliminacion
                codigo=JOptionPane.showConfirmDialog(null, "Â¿Esta seguro que desea eliminar?", "Info", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE);
                if (codigo==JOptionPane.YES_OPTION){

                    //obtener el id del auto a eliminar
                    //Realizamos un parseo del dato
                    int idEliminar = Integer.parseInt(
                        //realizamos un cambio a un valo String
                        String.valueOf(
                            //Obtenemos el valor de la fila especifica seleccionada
                            tablaPacientes.getValueAt(tablaPacientes.getSelectedRow(), 0)));

                    logica.borrarPaciente(idEliminar);
                    //Cargamos el mensaje
                    mostrarMensaje("Registro Borrado Exitosamente", "info", "Eliminacion");
                    //Cargamos nuevamente la tabla
                    cargarBusqueda(idEliminar);

                }
                else if(codigo==JOptionPane.NO_OPTION){
                    System.out.println("Has pulsado en NO");
                }
            }
            else{
                mostrarMensaje("No selecciono ningun registro", "Error ", "Error ");
            }
        }else{
            mostrarMensaje("La tabla esta vacia ", "Error ", "Error ");
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // Verificamos que la tabla no este vacia
        if(tablaPacientes.getRowCount() > 0){
            //Verificamos que este seleccionado un registro
            if(tablaPacientes.getSelectedRow()!=-1){
                
                //Obtener el id a modificar
                int id_paciente = Integer.parseInt(
                                    String.valueOf(
                                       tablaPacientes.getValueAt(
                                            tablaPacientes.getSelectedRow(),0)));
                
//                Mandamos llamar el nuevo Formulario
                Modificar modif = new Modificar(id_paciente);
                modif.setVisible(true);
                modif.setLocationRelativeTo(null);
                
                //Cerramos la venta
                this.dispose();
                
            }
            else{
            mostrarMensaje("No selecciono ningun registro", "Error", "Error");
            }
        }
        else{
        mostrarMensaje("Error: Tabla vacia", "error", "Error");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    //Mensajes Ventanas Emergentes
    //Creamos el metodo del mensaje
    public void mostrarMensaje(String mensaje, String tipo, String titulo){
       //creamos una instancia del JoptionPane
        JOptionPane optionpane = new JOptionPane(mensaje);
        //El if controla el tipo de icono para la ventana
        if(tipo.equalsIgnoreCase("info")){
            optionpane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
        }else if (tipo.equalsIgnoreCase("Error")) {
            optionpane.setMessageType(JOptionPane.ERROR_MESSAGE);
        }
        //Una instancia de dialog
        JDialog dialog = optionpane.createDialog(titulo);
        dialog.setVisible(true);
        dialog.setAlwaysOnTop(true);
            
        }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaPacientes;
    // End of variables declaration//GEN-END:variables

    private void cargarBusqueda(int id_buscar) {
       //hacer que las filas y columnas no sean editables
        DefaultTableModel tabla = new DefaultTableModel(){
            
            @Override
            public boolean isCellEditable(int row,int column) {
                return false;
            }
            
        };
        
        //Titutulos de las columnas
        String titulos[] = {
              "id",
              "nombre",
              " apellidoPaterno",
              " apllidoMaterno",
              "signos",
              "alergias",
              "enferCronica",
              "cirugias",
              "fecha_Registro"
            };
        //Seteamos a la "tabla" los titulos
        tabla.setColumnIdentifiers(titulos);
        
        pac = logica.buscarPaciente(id_buscar);
        
        //Seteamos los datos de la lista de automoviles
        //Verificamos si la lista esta vacia
        if(pac != null){
            Object[] object = {
                pac.getId_paciente(),
                   pac.getNombre(),
                   pac.getApellidoPaterno(),
                   pac.getApllidoMaterno(),
                   pac.getEdad(),
                   pac.getSignos(),
                   pac.getAlergias(),
                   pac.getEnferCronica(),
                   pac.getFecha()
                   
                };
               //Agregamos a la tabla el objecto con los dato del Auto
               tabla.addRow(object);
            }
        else{
            mostrarMensaje("No existen datos", "info", "Error");
        }
        //Le asignamos a la tabla del form, los datos de las columnas
        tablaPacientes.setModel(tabla);

    }        
                
    
}
